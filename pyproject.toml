[project]
name = "rowerowe_gminy"
version = "0.0.1"
description = "Narzędzia Rowerowych Gmin"
authors = [
    {name = "Mikołaj Nowak", email = "12396461+m3nowak@users.noreply.github.com"},
]
dependencies = [
    "click>=8.1.7",
]
requires-python = ">=3.12"
readme = "README.md"
license = {text = "Apache-2.0"}

[project.optional-dependencies]
scrap = [
    "pandas>=2.2.2",
    "lxml>=5.3.0",
    "beautifulsoup4>=4.12.3",
]
all = ["rowerowe_gminy[scrap,geo]"]
geo = [
    "geojson>=3.1.0",
    "geopandas>=1.0.1",
    "topojson>=1.9",
]
api = [
    "aiohttp>=3.10.5",
    "litestar[jwt]>=2.11.0",
    "uvicorn>=0.30.6",
    "pydantic>=2.9.1",
    "httpx>=0.27.2",
]

[build-system]
requires = ["pdm-backend"]
build-backend = "pdm.backend"


[tool.pdm]
distribution = true

[tool.pdm.build]
includes = ["src/rg_app/"]

[tool.pdm.dev-dependencies]
dev = [
    "ruff>=0.6.3",
]
[tool.autopep8]
max_line_length = 120

[project.scripts]
rg-scrapping = "rg_app.scrapping:__main__.main"
rg-api = "rg_app.api:__main__.main"


[tool.ruff]
line-length = 120

[tool.pdm.scripts]
sort = {cmd = "ruff check --extend-select I001 --fix src scripts"}
format = {cmd = "ruff format src scripts"}
pimp = {composite = ["sort", "format"]}

mk-data = { composite = [ "scripts/download_gml.py", "scripts/gml_to_json.py" ] }
openapi = { cmd = "rg-api openapi -j -o openapi.json" }