[project]
name = "rowerowe_gminy"
version = "0.0.1"
description = "Narzędzia Rowerowych Gmin"
authors = [
    { name = "Mikołaj Nowak", email = "12396461+m3nowak@users.noreply.github.com" },
]
dependencies = [
    "click>=8.1.7",
    "nats-py[nkeys]>=2.9.0",
    "httpx>=0.27.2",
    "msgspec>=0.18.6",
    ]
requires-python = ">=3.12"
readme = "README.md"
license = { text = "Apache-2.0" }

[project.optional-dependencies]
scrap = ["pandas>=2.2.2", "lxml>=5.3.0", "beautifulsoup4>=4.12.3"]
db_common = ["SQLAlchemy>=2.0.34", "psycopg[binary]>=3.2.1"]
all = ["rowerowe_gminy[scrap,geo]"]
geo = ["geojson>=3.1.0", "geopandas>=1.0.1", "topojson>=1.9"]
api = [
    "litestar[jwt,sqlalchemy]>=2.11.0",
    "uvicorn>=0.30.6",
    "pydantic>=2.9.1",
    "httpx>=0.27.2",
    "msgspec>=0.18.6",
    "rowerowe_gminy[db_common]",
]
db = ["alembic>=1.13.2", "rowerowe_gminy[db_common]"]
wha = [
    "litestar[standard]>=2.11.0",
    "msgspec>=0.18.6",
    "nats-py[nkeys]>=2.9.0",
]
worker = [
    "faststream[nats]>=0.5.25",
    "click>=8.1.7",
]
wkk = [
    "polyline>=2.0.2",
    "beautifulsoup4>=4.12.3",
    "rowerowe_gminy[db_common]",
    "lxml>=5.3.0",
]


[build-system]
requires = ["pdm-backend"]
build-backend = "pdm.backend"


[tool.autopep8]
max_line_length = 120

[tool.pdm]
distribution = true

[tool.pdm.build]
includes = ["src/rg_app/"]

[tool.pdm.dev-dependencies]
dev = [
    "ruff>=0.6.3",
    "pyright>=1.1.382.post1",
]

[tool.pdm.scripts]
lint = {cmd = "ruff check src tests"}
lint-fix = {cmd = "ruff check --fix src tests"}
format = {cmd = "ruff format --check src tests"}
format-fix = {cmd = "ruff format src tests"}
pimp = {composite = ["lint-fix", "format-fix"]}
types = {cmd = "pyright"}

mk-data = { composite = ["scripts/download_gml.py", "scripts/gml_to_json.py"] }
openapi = { cmd = "rg-api openapi -j -o openapi.json" }
db-revision = { cmd = "alembic revision --autogenerate", working_dir = "src/rg_app/db" }
start-db = { cmd = "docker run --name rg-app-db -e POSTGRES_PASSWORD=postgres -p 5432:5432 -v rg-app-db:/var/lib/postgresql -d docker.io/library/postgres:16" }
resume-db = { cmd = "docker start rg-app-db" }
migrate-db = { cmd = "rg-db migrate postgresql+psycopg://postgres:postgres@localhost/postgres"}

start-nats = { cmd = "docker run --name rg-app-nats -p 4222:4222 -v rg-nats:/nats-data -v ./data/nats/nats-server.conf:/etc/nats/nats-server.conf -d docker.io/library/nats:2.10 -c /etc/nats/nats-server.conf" }
resume-nats = { cmd = "docker start rg-app-nats" }

[project.scripts]
rg-scrapping = "rg_app.scrapping:__main__.main"
rg-api = "rg_app.api:__main__.main"
rg-db = "rg_app.db:__main__.main"
rg-wha = "rg_app.wha:__main__.main"
rg-wkk = "rg_app.wkk:__main__.main"


[tool.ruff]
line-length = 120
target-version = "py312"

[tool.ruff.lint]
extend-select = ["I001"]

[tool.pyright]
include = ["src", "tests"]
exclude = [
    "**/__pycache__",
]
reportMissingImports = "error"
pythonVersion = "3.12"
pythonPlatform = "Linux"
